

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Wed Jun 20 22:45:12 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 15 "C:\Users\Phang\Desktop\New folder\PR 7 _ Controlling Stepper Motor Using SD02B (2 
                                 Amp per phase)\Source Code PR7\PR7.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 15 "C:\Users\Phang\Desktop\New folder\PR 7 _ Controlling Stepper Motor Using SD02B (2 
                                 Amp per phase)\Source Code PR7\PR7.c"
    45  2007  3F32               	dw 0x3F32 ;#
    46                           	FNCALL	_main,_delay
    47                           	FNCALL	_main,_rotate
    48                           	FNCALL	_rotate,_delay
    49                           	FNROOT	_main
    50                           	global	_ccw
    51                           	global	_on
    52                           	global	_run
    53                           	global	_ADCON0
    54                           psect	text102,local,class=CODE,delta=2
    55                           global __ptext102
    56  0000                     __ptext102:
    57  001F                     _ADCON0	set	31
    58                           	global	_ADRESH
    59  001E                     _ADRESH	set	30
    60                           	global	_PORTC
    61  0007                     _PORTC	set	7
    62                           	global	_ADGO
    63  00FA                     _ADGO	set	250
    64                           	global	_RB1
    65  0031                     _RB1	set	49
    66                           	global	_RB2
    67  0032                     _RB2	set	50
    68                           	global	_RB4
    69  0034                     _RB4	set	52
    70                           	global	_RC0
    71  0038                     _RC0	set	56
    72                           	global	_RC1
    73  0039                     _RC1	set	57
    74                           	global	_RC2
    75  003A                     _RC2	set	58
    76                           	global	_RC3
    77  003B                     _RC3	set	59
    78                           	global	_RC4
    79  003C                     _RC4	set	60
    80                           	global	_RC5
    81  003D                     _RC5	set	61
    82                           	global	_ADCON1
    83  009F                     _ADCON1	set	159
    84                           	global	_TRISA
    85  0085                     _TRISA	set	133
    86                           	global	_TRISB
    87  0086                     _TRISB	set	134
    88                           	global	_TRISC
    89  0087                     _TRISC	set	135
    90                           	file	"PR 7.as"
    91                           	line	#
    92                           psect cinit,class=CODE,delta=2
    93                           global start_initialization
    94  066A                     start_initialization:
    95                           
    96                           psect	bssBANK0,class=BANK0,space=1
    97                           global __pbssBANK0
    98  0020                     __pbssBANK0:
    99  0020                     _ccw:
   100  0020                            ds      1
   101                           
   102  0021                     _on:
   103  0021                            ds      1
   104                           
   105  0022                     _run:
   106  0022                            ds      1
   107                           
   108                           ; Clear objects allocated to BANK0
   109                           psect cinit,class=CODE,delta=2
   110  066A  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   111  066B  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   112  066C  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   113                           psect cinit,class=CODE,delta=2
   114                           global end_of_initialization
   115                           
   116                           ;End of C runtime variable initialization code
   117                           
   118  066D                     end_of_initialization:
   119  066D  0183               clrf status
   120  066E  120A  118A  2F35   ljmp _main	;jump to C main() function
   121                           psect	cstackCOMMON,class=COMMON,space=1
   122                           global __pcstackCOMMON
   123  0070                     __pcstackCOMMON:
   124                           	global	?_delay
   125  0070                     ?_delay:	; 0 bytes @ 0x0
   126                           	global	?_rotate
   127  0070                     ?_rotate:	; 0 bytes @ 0x0
   128                           	global	?_main
   129  0070                     ?_main:	; 0 bytes @ 0x0
   130                           	global	delay@data
   131  0070                     delay@data:	; 4 bytes @ 0x0
   132  0070                     	ds	4
   133                           	global	??_delay
   134  0074                     ??_delay:	; 0 bytes @ 0x4
   135  0074                     	ds	4
   136                           	global	??_rotate
   137  0078                     ??_rotate:	; 0 bytes @ 0x8
   138  0078                     	ds	4
   139                           	global	rotate@i
   140  007C                     rotate@i:	; 1 bytes @ 0xC
   141  007C                     	ds	1
   142                           	global	??_main
   143  007D                     ??_main:	; 0 bytes @ 0xD
   144  007D                     	ds	1
   145                           psect	cstackBANK0,class=BANK0,space=1
   146                           global __pcstackBANK0
   147  0023                     __pcstackBANK0:
   148                           	global	main@turn
   149  0023                     main@turn:	; 1 bytes @ 0x0
   150  0023                     	ds	1
   151 ;;Data sizes: Strings 0, constant 0, data 0, bss 3, persistent 0 stack 0
   152 ;;Auto spaces:   Size  Autos    Used
   153 ;; COMMON          14     14      14
   154 ;; BANK0           80      1       4
   155 ;; BANK1           80      0       0
   156 ;; BANK3           96      0       0
   157 ;; BANK2           96      0       0
   158                           
   159 ;;
   160 ;; Pointer list with targets:
   161                           
   162                           
   163                           
   164 ;;
   165 ;; Critical Paths under _main in COMMON
   166 ;;
   167 ;;   _main->_rotate
   168 ;;   _rotate->_delay
   169 ;;
   170 ;; Critical Paths under _main in BANK0
   171 ;;
   172 ;;   None.
   173 ;;
   174 ;; Critical Paths under _main in BANK1
   175 ;;
   176 ;;   None.
   177 ;;
   178 ;; Critical Paths under _main in BANK3
   179 ;;
   180 ;;   None.
   181 ;;
   182 ;; Critical Paths under _main in BANK2
   183 ;;
   184 ;;   None.
   185                           
   186 ;;
   187 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   188 ;;
   189                           
   190 ;;
   191 ;;Call Graph Tables:
   192 ;;
   193 ;; ---------------------------------------------------------------------------------
   194 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   195 ;; ---------------------------------------------------------------------------------
   196 ;; (0) _main                                                 2     2      0     182
   197 ;;                                             13 COMMON     1     1      0
   198 ;;                                              0 BANK0      1     1      0
   199 ;;                              _delay
   200 ;;                             _rotate
   201 ;; ---------------------------------------------------------------------------------
   202 ;; (1) _rotate                                               5     5      0     136
   203 ;;                                              8 COMMON     5     5      0
   204 ;;                              _delay
   205 ;; ---------------------------------------------------------------------------------
   206 ;; (2) _delay                                                8     4      4      45
   207 ;;                                              0 COMMON     8     4      4
   208 ;; ---------------------------------------------------------------------------------
   209 ;; Estimated maximum stack depth 2
   210 ;; ---------------------------------------------------------------------------------
   211                           
   212 ;; Call Graph Graphs:
   213                           
   214 ;; _main (ROOT)
   215 ;;   _delay
   216 ;;   _rotate
   217 ;;     _delay
   218 ;;
   219                           
   220 ;; Address spaces:
   221                           
   222 ;;Name               Size   Autos  Total    Cost      Usage
   223 ;;BITCOMMON            E      0       0       0        0.0%
   224 ;;EEDATA             100      0       0       0        0.0%
   225 ;;NULL                 0      0       0       0        0.0%
   226 ;;CODE                 0      0       0       0        0.0%
   227 ;;COMMON               E      E       E       1      100.0%
   228 ;;BITSFR0              0      0       0       1        0.0%
   229 ;;SFR0                 0      0       0       1        0.0%
   230 ;;BITSFR1              0      0       0       2        0.0%
   231 ;;SFR1                 0      0       0       2        0.0%
   232 ;;STACK                0      0       2       2        0.0%
   233 ;;ABS                  0      0      12       3        0.0%
   234 ;;BITBANK0            50      0       0       4        0.0%
   235 ;;BITSFR3              0      0       0       4        0.0%
   236 ;;SFR3                 0      0       0       4        0.0%
   237 ;;BANK0               50      1       4       5        5.0%
   238 ;;BITSFR2              0      0       0       5        0.0%
   239 ;;SFR2                 0      0       0       5        0.0%
   240 ;;BITBANK1            50      0       0       6        0.0%
   241 ;;BANK1               50      0       0       7        0.0%
   242 ;;BITBANK3            60      0       0       8        0.0%
   243 ;;BANK3               60      0       0       9        0.0%
   244 ;;BITBANK2            60      0       0      10        0.0%
   245 ;;BANK2               60      0       0      11        0.0%
   246 ;;DATA                 0      0      14      12        0.0%
   247                           
   248                           	global	_main
   249                           psect	maintext,global,class=CODE,delta=2
   250                           global __pmaintext
   251  0735                     __pmaintext:
   252                           
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 51 in file "C:\Users\Phang\Desktop\New folder\PR 7 _ Controlling Stepper Motor Using SD02B (2 Amp per phase)\So
       urce Code PR7\PR7.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;  turn            1    0[BANK0 ] unsigned char 
   260 ;; Return value:  Size  Location     Type
   261 ;;		None               void
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 17F/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   269 ;;      Params:         0       0       0       0       0
   270 ;;      Locals:         0       1       0       0       0
   271 ;;      Temps:          1       0       0       0       0
   272 ;;      Totals:         1       1       0       0       0
   273 ;;Total ram usage:        2 bytes
   274 ;; Hardware stack levels required when called:    2
   275 ;; This function calls:
   276 ;;		_delay
   277 ;;		_rotate
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           psect	maintext
   283                           	file	"C:\Users\Phang\Desktop\New folder\PR 7 _ Controlling Stepper Motor Using SD02B (2
                                  Amp per phase)\Source Code PR7\PR7.c"
   284                           	line	51
   285                           	global	__size_of_main
   286  00CB                     	__size_of_main	equ	__end_of_main-_main
   287                           	
   288  0735                     _main:	
   289                           	opt	stack 6
   290                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   291                           	line	53
   292                           	
   293  0735                     l1913:	
   294                           ;PR7.c: 53: unsigned char turn=0;
   295  0735  1003               	clrc
   296  0736  3000               	movlw	0
   297  0737  1803               	btfsc	status,0
   298  0738  3001               	movlw	1
   299  0739  1283               	bcf	status, 5	;RP0=0, select bank0
   300  073A  1303               	bcf	status, 6	;RP1=0, select bank0
   301  073B  00A3               	movwf	(main@turn)
   302                           	line	55
   303                           	
   304  073C                     l1915:	
   305                           ;PR7.c: 55: TRISA=0b11111111;
   306  073C  30FF               	movlw	(0FFh)
   307  073D  1683               	bsf	status, 5	;RP0=1, select bank1
   308  073E  1303               	bcf	status, 6	;RP1=0, select bank1
   309  073F  0085               	movwf	(133)^080h	;volatile
   310                           	line	56
   311                           	
   312  0740                     l1917:	
   313                           ;PR7.c: 56: TRISB=0b11111111;
   314  0740  30FF               	movlw	(0FFh)
   315  0741  0086               	movwf	(134)^080h	;volatile
   316                           	line	57
   317                           	
   318  0742                     l1919:	
   319                           ;PR7.c: 57: TRISC=0B00000000;
   320  0742  0187               	clrf	(135)^080h	;volatile
   321                           	line	59
   322                           	
   323  0743                     l1921:	
   324                           ;PR7.c: 59: PORTC=0;
   325  0743  1283               	bcf	status, 5	;RP0=0, select bank0
   326  0744  1303               	bcf	status, 6	;RP1=0, select bank0
   327  0745  0187               	clrf	(7)	;volatile
   328                           	line	60
   329                           	
   330  0746                     l1923:	
   331                           ;PR7.c: 60: ADCON1=0b00000000;
   332  0746  1683               	bsf	status, 5	;RP0=1, select bank1
   333  0747  1303               	bcf	status, 6	;RP1=0, select bank1
   334  0748  019F               	clrf	(159)^080h	;volatile
   335                           	line	61
   336                           	
   337  0749                     l1925:	
   338                           ;PR7.c: 61: ADCON0=0b01000001;
   339  0749  3041               	movlw	(041h)
   340  074A  1283               	bcf	status, 5	;RP0=0, select bank0
   341  074B  1303               	bcf	status, 6	;RP1=0, select bank0
   342  074C  009F               	movwf	(31)	;volatile
   343                           	line	64
   344                           	
   345  074D                     l1927:	
   346                           ;PR7.c: 64: RC0 = 0;
   347  074D  1007               	bcf	(56/8),(56)&7
   348                           	line	65
   349                           	
   350  074E                     l1929:	
   351                           ;PR7.c: 65: RC1 = 0;
   352  074E  1087               	bcf	(57/8),(57)&7
   353                           	line	66
   354                           	
   355  074F                     l1931:	
   356                           ;PR7.c: 66: RC2 = 0;
   357  074F  1107               	bcf	(58/8),(58)&7
   358  0750  2F51               	goto	l1933
   359                           	line	69
   360                           ;PR7.c: 69: while(1)
   361                           	
   362  0751                     l569:	
   363                           	line	71
   364                           	
   365  0751                     l1933:	
   366                           ;PR7.c: 70: {
   367                           ;PR7.c: 71: if(!RB1)
   368  0751  1886               	btfsc	(49/8),(49)&7
   369  0752  2F54               	goto	u2391
   370  0753  2F55               	goto	u2390
   371  0754                     u2391:
   372  0754  2F72               	goto	l1943
   373  0755                     u2390:
   374  0755  2F57               	goto	l571
   375                           	line	73
   376                           	
   377  0756                     l1935:	
   378                           ;PR7.c: 72: {
   379                           ;PR7.c: 73: while(RB1==0)continue;
   380  0756  2F57               	goto	l571
   381                           	
   382  0757                     l572:	
   383                           	
   384  0757                     l571:	
   385  0757  1C86               	btfss	(49/8),(49)&7
   386  0758  2F5A               	goto	u2401
   387  0759  2F5B               	goto	u2400
   388  075A                     u2401:
   389  075A  2F57               	goto	l571
   390  075B                     u2400:
   391  075B  2F5C               	goto	l1937
   392                           	
   393  075C                     l573:	
   394                           	line	74
   395                           	
   396  075C                     l1937:	
   397                           ;PR7.c: 74: delay(6250);
   398  075C  3000               	movlw	0
   399  075D  00F3               	movwf	(?_delay+3)
   400  075E  3000               	movlw	0
   401  075F  00F2               	movwf	(?_delay+2)
   402  0760  3018               	movlw	018h
   403  0761  00F1               	movwf	(?_delay+1)
   404  0762  306A               	movlw	06Ah
   405  0763  00F0               	movwf	(?_delay)
   406                           
   407  0764  120A  118A  2671   	fcall	_delay
              120A  118A         
   408                           	line	75
   409                           	
   410  0769                     l1939:	
   411                           ;PR7.c: 75: on^=1;
   412  0769  3001               	movlw	(01h)
   413  076A  00FD               	movwf	(??_main+0)+0
   414  076B  087D               	movf	(??_main+0)+0,w
   415  076C  1283               	bcf	status, 5	;RP0=0, select bank0
   416  076D  1303               	bcf	status, 6	;RP1=0, select bank0
   417  076E  06A1               	xorwf	(_on),f
   418                           	line	76
   419                           	
   420  076F                     l1941:	
   421                           ;PR7.c: 76: RC0^=1;
   422  076F  3001               	movlw	1<<((56)&7)
   423  0770  0687               	xorwf	((56)/8),f
   424  0771  2F72               	goto	l1943
   425                           	line	77
   426                           	
   427  0772                     l570:	
   428                           	line	78
   429                           	
   430  0772                     l1943:	
   431                           ;PR7.c: 77: }
   432                           ;PR7.c: 78: if(!RB2)
   433  0772  1906               	btfsc	(50/8),(50)&7
   434  0773  2F75               	goto	u2411
   435  0774  2F76               	goto	u2410
   436  0775                     u2411:
   437  0775  2F93               	goto	l1953
   438  0776                     u2410:
   439  0776  2F78               	goto	l575
   440                           	line	80
   441                           	
   442  0777                     l1945:	
   443                           ;PR7.c: 79: {
   444                           ;PR7.c: 80: while(RB2==0)continue;
   445  0777  2F78               	goto	l575
   446                           	
   447  0778                     l576:	
   448                           	
   449  0778                     l575:	
   450  0778  1D06               	btfss	(50/8),(50)&7
   451  0779  2F7B               	goto	u2421
   452  077A  2F7C               	goto	u2420
   453  077B                     u2421:
   454  077B  2F78               	goto	l575
   455  077C                     u2420:
   456  077C  2F7D               	goto	l1947
   457                           	
   458  077D                     l577:	
   459                           	line	81
   460                           	
   461  077D                     l1947:	
   462                           ;PR7.c: 81: delay(6250);
   463  077D  3000               	movlw	0
   464  077E  00F3               	movwf	(?_delay+3)
   465  077F  3000               	movlw	0
   466  0780  00F2               	movwf	(?_delay+2)
   467  0781  3018               	movlw	018h
   468  0782  00F1               	movwf	(?_delay+1)
   469  0783  306A               	movlw	06Ah
   470  0784  00F0               	movwf	(?_delay)
   471                           
   472  0785  120A  118A  2671   	fcall	_delay
              120A  118A         
   473                           	line	82
   474                           	
   475  078A                     l1949:	
   476                           ;PR7.c: 82: ccw^=1;
   477  078A  3001               	movlw	(01h)
   478  078B  00FD               	movwf	(??_main+0)+0
   479  078C  087D               	movf	(??_main+0)+0,w
   480  078D  1283               	bcf	status, 5	;RP0=0, select bank0
   481  078E  1303               	bcf	status, 6	;RP1=0, select bank0
   482  078F  06A0               	xorwf	(_ccw),f
   483                           	line	83
   484                           	
   485  0790                     l1951:	
   486                           ;PR7.c: 83: RC1^=1;
   487  0790  3002               	movlw	1<<((57)&7)
   488  0791  0687               	xorwf	((57)/8),f
   489  0792  2F93               	goto	l1953
   490                           	line	84
   491                           	
   492  0793                     l574:	
   493                           	line	85
   494                           	
   495  0793                     l1953:	
   496                           ;PR7.c: 84: }
   497                           ;PR7.c: 85: if(!RB4)
   498  0793  1A06               	btfsc	(52/8),(52)&7
   499  0794  2F96               	goto	u2431
   500  0795  2F97               	goto	u2430
   501  0796                     u2431:
   502  0796  2FEB               	goto	l1981
   503  0797                     u2430:
   504  0797  2F99               	goto	l579
   505                           	line	87
   506                           	
   507  0798                     l1955:	
   508                           ;PR7.c: 86: {
   509                           ;PR7.c: 87: while(RB4==0)continue;
   510  0798  2F99               	goto	l579
   511                           	
   512  0799                     l580:	
   513                           	
   514  0799                     l579:	
   515  0799  1E06               	btfss	(52/8),(52)&7
   516  079A  2F9C               	goto	u2441
   517  079B  2F9D               	goto	u2440
   518  079C                     u2441:
   519  079C  2F99               	goto	l579
   520  079D                     u2440:
   521  079D  2F9E               	goto	l1957
   522                           	
   523  079E                     l581:	
   524                           	line	88
   525                           	
   526  079E                     l1957:	
   527                           ;PR7.c: 88: delay(6250);
   528  079E  3000               	movlw	0
   529  079F  00F3               	movwf	(?_delay+3)
   530  07A0  3000               	movlw	0
   531  07A1  00F2               	movwf	(?_delay+2)
   532  07A2  3018               	movlw	018h
   533  07A3  00F1               	movwf	(?_delay+1)
   534  07A4  306A               	movlw	06Ah
   535  07A5  00F0               	movwf	(?_delay)
   536                           
   537  07A6  120A  118A  2671   	fcall	_delay
              120A  118A         
   538                           	line	89
   539                           	
   540  07AB                     l1959:	
   541                           ;PR7.c: 89: run^=1;
   542  07AB  3001               	movlw	(01h)
   543  07AC  00FD               	movwf	(??_main+0)+0
   544  07AD  087D               	movf	(??_main+0)+0,w
   545  07AE  1283               	bcf	status, 5	;RP0=0, select bank0
   546  07AF  1303               	bcf	status, 6	;RP1=0, select bank0
   547  07B0  06A2               	xorwf	(_run),f
   548                           	line	90
   549                           	
   550  07B1                     l1961:	
   551                           ;PR7.c: 90: RC2^=1;
   552  07B1  3004               	movlw	1<<((58)&7)
   553  07B2  0687               	xorwf	((58)/8),f
   554  07B3  2FEB               	goto	l1981
   555                           	line	91
   556                           	
   557  07B4                     l578:	
   558                           	line	93
   559                           ;PR7.c: 91: }
   560                           ;PR7.c: 93: while(RB1&&RB2&&RB4)
   561  07B4  2FEB               	goto	l1981
   562                           	
   563  07B5                     l583:	
   564                           	line	95
   565                           	
   566  07B5                     l1963:	
   567                           ;PR7.c: 94: {
   568                           ;PR7.c: 95: if(on)
   569  07B5  0821               	movf	(_on),w
   570  07B6  1D03               	skipz
   571  07B7  2FB9               	goto	u2450
   572  07B8  2FDB               	goto	l584
   573  07B9                     u2450:
   574                           	line	97
   575                           	
   576  07B9                     l1965:	
   577                           ;PR7.c: 96: {
   578                           ;PR7.c: 97: RC5=1;
   579  07B9  1687               	bsf	(61/8),(61)&7
   580                           	line	99
   581                           	
   582  07BA                     l1967:	
   583                           ;PR7.c: 99: if(ccw)
   584  07BA  0820               	movf	(_ccw),w
   585  07BB  1D03               	skipz
   586  07BC  2FBE               	goto	u2460
   587  07BD  2FCC               	goto	l585
   588  07BE                     u2460:
   589                           	line	101
   590                           	
   591  07BE                     l1969:	
   592                           ;PR7.c: 100: {
   593                           ;PR7.c: 101: RC4=1;
   594  07BE  1607               	bsf	(60/8),(60)&7
   595                           	line	102
   596                           	
   597  07BF                     l1971:	
   598                           ;PR7.c: 102: if(run)
   599  07BF  0822               	movf	(_run),w
   600  07C0  1D03               	skipz
   601  07C1  2FC3               	goto	u2470
   602  07C2  2FC9               	goto	l586
   603  07C3                     u2470:
   604                           	line	104
   605                           	
   606  07C3                     l1973:	
   607                           ;PR7.c: 103: {
   608                           ;PR7.c: 104: rotate();
   609  07C3  120A  118A  26A1   	fcall	_rotate
              120A  118A         
   610                           	line	105
   611                           ;PR7.c: 105: }
   612  07C8  2FEB               	goto	l1981
   613                           	line	106
   614                           	
   615  07C9                     l586:	
   616                           	line	108
   617                           ;PR7.c: 106: else
   618                           ;PR7.c: 107: {
   619                           ;PR7.c: 108: RC3=0;
   620  07C9  1187               	bcf	(59/8),(59)&7
   621  07CA  2FEB               	goto	l1981
   622                           	line	109
   623                           	
   624  07CB                     l587:	
   625                           	line	110
   626                           ;PR7.c: 109: }
   627                           ;PR7.c: 110: }
   628  07CB  2FEB               	goto	l1981
   629                           	line	111
   630                           	
   631  07CC                     l585:	
   632                           	line	113
   633                           ;PR7.c: 111: else
   634                           ;PR7.c: 112: {
   635                           ;PR7.c: 113: RC4=0;
   636  07CC  1207               	bcf	(60/8),(60)&7
   637                           	line	114
   638                           	
   639  07CD                     l1975:	
   640                           ;PR7.c: 114: if(run)
   641  07CD  0822               	movf	(_run),w
   642  07CE  1D03               	skipz
   643  07CF  2FD1               	goto	u2480
   644  07D0  2FD7               	goto	l589
   645  07D1                     u2480:
   646                           	line	116
   647                           	
   648  07D1                     l1977:	
   649                           ;PR7.c: 115: {
   650                           ;PR7.c: 116: rotate();
   651  07D1  120A  118A  26A1   	fcall	_rotate
              120A  118A         
   652                           	line	117
   653                           ;PR7.c: 117: }
   654  07D6  2FEB               	goto	l1981
   655                           	line	118
   656                           	
   657  07D7                     l589:	
   658                           	line	120
   659                           ;PR7.c: 118: else
   660                           ;PR7.c: 119: {
   661                           ;PR7.c: 120: RC3=0;
   662  07D7  1187               	bcf	(59/8),(59)&7
   663  07D8  2FEB               	goto	l1981
   664                           	line	121
   665                           	
   666  07D9                     l590:	
   667  07D9  2FEB               	goto	l1981
   668                           	line	122
   669                           	
   670  07DA                     l588:	
   671                           	line	123
   672                           ;PR7.c: 121: }
   673                           ;PR7.c: 122: }
   674                           ;PR7.c: 123: }
   675  07DA  2FEB               	goto	l1981
   676                           	line	124
   677                           	
   678  07DB                     l584:	
   679                           	line	126
   680                           ;PR7.c: 124: else
   681                           ;PR7.c: 125: {
   682                           ;PR7.c: 126: RC0=0;
   683  07DB  1007               	bcf	(56/8),(56)&7
   684                           	line	127
   685                           ;PR7.c: 127: RC1=0;
   686  07DC  1087               	bcf	(57/8),(57)&7
   687                           	line	128
   688                           ;PR7.c: 128: RC2=0;
   689  07DD  1107               	bcf	(58/8),(58)&7
   690                           	line	129
   691                           ;PR7.c: 129: RC5=0;
   692  07DE  1287               	bcf	(61/8),(61)&7
   693                           	line	130
   694                           	
   695  07DF                     l1979:	
   696                           ;PR7.c: 130: ccw=0;
   697  07DF  1003               	clrc
   698  07E0  3000               	movlw	0
   699  07E1  1803               	btfsc	status,0
   700  07E2  3001               	movlw	1
   701  07E3  00A0               	movwf	(_ccw)
   702                           	line	131
   703                           ;PR7.c: 131: run=0;
   704  07E4  1003               	clrc
   705  07E5  3000               	movlw	0
   706  07E6  1803               	btfsc	status,0
   707  07E7  3001               	movlw	1
   708  07E8  00A2               	movwf	(_run)
   709  07E9  2FEB               	goto	l1981
   710                           	line	132
   711                           	
   712  07EA                     l591:	
   713  07EA  2FEB               	goto	l1981
   714                           	line	133
   715                           	
   716  07EB                     l582:	
   717                           	line	93
   718                           	
   719  07EB                     l1981:	
   720  07EB  1283               	bcf	status, 5	;RP0=0, select bank0
   721  07EC  1303               	bcf	status, 6	;RP1=0, select bank0
   722  07ED  1C86               	btfss	(49/8),(49)&7
   723  07EE  2FF0               	goto	u2491
   724  07EF  2FF1               	goto	u2490
   725  07F0                     u2491:
   726  07F0  2F51               	goto	l1933
   727  07F1                     u2490:
   728                           	
   729  07F1                     l1983:	
   730  07F1  1D06               	btfss	(50/8),(50)&7
   731  07F2  2FF4               	goto	u2501
   732  07F3  2FF5               	goto	u2500
   733  07F4                     u2501:
   734  07F4  2F51               	goto	l1933
   735  07F5                     u2500:
   736                           	
   737  07F5                     l1985:	
   738  07F5  1A06               	btfsc	(52/8),(52)&7
   739  07F6  2FF8               	goto	u2511
   740  07F7  2FF9               	goto	u2510
   741  07F8                     u2511:
   742  07F8  2FB5               	goto	l1963
   743  07F9                     u2510:
   744  07F9  2F51               	goto	l1933
   745                           	
   746  07FA                     l593:	
   747  07FA  2F51               	goto	l1933
   748                           	
   749  07FB                     l594:	
   750  07FB  2F51               	goto	l1933
   751                           	line	134
   752                           	
   753  07FC                     l595:	
   754                           	line	69
   755  07FC  2F51               	goto	l1933
   756                           	
   757  07FD                     l596:	
   758                           	line	135
   759                           	
   760  07FD                     l597:	
   761                           	global	start
   762  07FD  120A  118A  2800   	ljmp	start
   763                           	opt stack 0
   764                           GLOBAL	__end_of_main
   765  0800                     	__end_of_main:
   766 ;; =============== function _main ends ============
   767                           
   768                           	signat	_main,88
   769                           	global	_rotate
   770                           psect	text103,local,class=CODE,delta=2
   771                           global __ptext103
   772  06A1                     __ptext103:
   773                           
   774 ;; *************** function _rotate *****************
   775 ;; Defined at:
   776 ;;		line 146 in file "C:\Users\Phang\Desktop\New folder\PR 7 _ Controlling Stepper Motor Using SD02B (2 Amp per phase)\S
       ource Code PR7\PR7.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  i               1   12[COMMON] unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;		None               void
   783 ;; Registers used:
   784 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         1       0       0       0       0
   792 ;;      Temps:          4       0       0       0       0
   793 ;;      Totals:         5       0       0       0       0
   794 ;;Total ram usage:        5 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    1
   797 ;; This function calls:
   798 ;;		_delay
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           psect	text103
   804                           	file	"C:\Users\Phang\Desktop\New folder\PR 7 _ Controlling Stepper Motor Using SD02B (2
                                  Amp per phase)\Source Code PR7\PR7.c"
   805                           	line	146
   806                           	global	__size_of_rotate
   807  0094                     	__size_of_rotate	equ	__end_of_rotate-_rotate
   808                           	
   809  06A1                     _rotate:	
   810                           	opt	stack 6
   811                           ; Regs used in _rotate: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   812                           	line	147
   813                           	
   814  06A1                     l1883:	
   815                           ;PR7.c: 147: unsigned char i=0;
   816  06A1  1003               	clrc
   817  06A2  3000               	movlw	0
   818  06A3  1803               	btfsc	status,0
   819  06A4  3001               	movlw	1
   820  06A5  00FC               	movwf	(rotate@i)
   821                           	line	149
   822                           	
   823  06A6                     l1885:	
   824                           ;PR7.c: 149: ADGO=1;
   825  06A6  1283               	bcf	status, 5	;RP0=0, select bank0
   826  06A7  1303               	bcf	status, 6	;RP1=0, select bank0
   827  06A8  151F               	bsf	(250/8),(250)&7
   828                           	line	150
   829                           ;PR7.c: 150: while(ADGO==1)continue;
   830  06A9  2EAA               	goto	l605
   831                           	
   832  06AA                     l606:	
   833                           	
   834  06AA                     l605:	
   835  06AA  191F               	btfsc	(250/8),(250)&7
   836  06AB  2EAD               	goto	u2361
   837  06AC  2EAE               	goto	u2360
   838  06AD                     u2361:
   839  06AD  2EAA               	goto	l605
   840  06AE                     u2360:
   841  06AE  2EAF               	goto	l1887
   842                           	
   843  06AF                     l607:	
   844                           	line	168
   845                           	
   846  06AF                     l1887:	
   847                           ;PR7.c: 168: if(ADRESH==0)
   848  06AF  089E               	movf	(30),f
   849  06B0  1D03               	skipz	;volatile
   850  06B1  2EB3               	goto	u2371
   851  06B2  2EB4               	goto	u2370
   852  06B3                     u2371:
   853  06B3  2EB6               	goto	l1891
   854  06B4                     u2370:
   855                           	line	170
   856                           	
   857  06B4                     l1889:	
   858                           ;PR7.c: 169: {
   859                           ;PR7.c: 170: RC3=0;
   860  06B4  1187               	bcf	(59/8),(59)&7
   861                           	line	171
   862                           ;PR7.c: 171: }
   863  06B5  2F34               	goto	l612
   864                           	line	173
   865                           	
   866  06B6                     l608:	
   867                           	
   868  06B6                     l1891:	
   869                           ;PR7.c: 173: else if((255-ADRESH)<=6)
   870  06B6  081E               	movf	(30),w	;volatile
   871  06B7  00F8               	movwf	(??_rotate+0)+0
   872  06B8  01F9               	clrf	(??_rotate+0)+0+1
   873  06B9  09F8               	comf	(??_rotate+0)+0,f
   874  06BA  09F9               	comf	(??_rotate+0)+1,f
   875  06BB  0AF8               	incf	(??_rotate+0)+0,f
   876  06BC  1903               	skipnz
   877  06BD  0AF9               	incf	(??_rotate+0)+1,f
   878  06BE  0878               	movf	0+(??_rotate+0)+0,w
   879  06BF  3EFF               	addlw	low(0FFh)
   880  06C0  00FA               	movwf	(??_rotate+2)+0
   881  06C1  0879               	movf	1+(??_rotate+0)+0,w
   882  06C2  1803               	skipnc
   883  06C3  3E01               	addlw	1
   884  06C4  3E00               	addlw	high(0FFh)
   885  06C5  00FB               	movwf	1+(??_rotate+2)+0
   886  06C6  087B               	movf	1+(??_rotate+2)+0,w
   887  06C7  3A80               	xorlw	80h
   888  06C8  00FF               	movwf	btemp+1
   889  06C9  3080               	movlw	(high(07h))^80h
   890  06CA  027F               	subwf	btemp+1,w
   891  06CB  1D03               	skipz
   892  06CC  2ECF               	goto	u2385
   893  06CD  3007               	movlw	low(07h)
   894  06CE  027A               	subwf	0+(??_rotate+2)+0,w
   895  06CF                     u2385:
   896                           
   897  06CF  1803               	skipnc
   898  06D0  2ED2               	goto	u2381
   899  06D1  2ED3               	goto	u2380
   900  06D2                     u2381:
   901  06D2  2F02               	goto	l1903
   902  06D3                     u2380:
   903                           	line	175
   904                           	
   905  06D3                     l1893:	
   906                           ;PR7.c: 174: {
   907                           ;PR7.c: 175: i = 6;
   908  06D3  3006               	movlw	(06h)
   909  06D4  00F8               	movwf	(??_rotate+0)+0
   910  06D5  0878               	movf	(??_rotate+0)+0,w
   911  06D6  00FC               	movwf	(rotate@i)
   912                           	line	176
   913                           	
   914  06D7                     l1895:	
   915                           ;PR7.c: 176: RC3=1;
   916  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
   917  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
   918  06D9  1587               	bsf	(59/8),(59)&7
   919                           	line	177
   920                           	
   921  06DA                     l1897:	
   922                           ;PR7.c: 177: delay(i);
   923  06DA  087C               	movf	(rotate@i),w
   924  06DB  00F8               	movwf	(??_rotate+0)+0
   925  06DC  01F9               	clrf	((??_rotate+0)+0+1)
   926  06DD  01FA               	clrf	((??_rotate+0)+0+2)
   927  06DE  01FB               	clrf	((??_rotate+0)+0+3)
   928  06DF  087B               	movf	3+(??_rotate+0)+0,w
   929  06E0  00F3               	movwf	(?_delay+3)
   930  06E1  087A               	movf	2+(??_rotate+0)+0,w
   931  06E2  00F2               	movwf	(?_delay+2)
   932  06E3  0879               	movf	1+(??_rotate+0)+0,w
   933  06E4  00F1               	movwf	(?_delay+1)
   934  06E5  0878               	movf	0+(??_rotate+0)+0,w
   935  06E6  00F0               	movwf	(?_delay)
   936                           
   937  06E7  120A  118A  2671   	fcall	_delay
              120A  118A         
   938                           	line	178
   939                           	
   940  06EC                     l1899:	
   941                           ;PR7.c: 178: RC3=0;
   942  06EC  1283               	bcf	status, 5	;RP0=0, select bank0
   943  06ED  1303               	bcf	status, 6	;RP1=0, select bank0
   944  06EE  1187               	bcf	(59/8),(59)&7
   945                           	line	179
   946                           	
   947  06EF                     l1901:	
   948                           ;PR7.c: 179: delay(i);
   949  06EF  087C               	movf	(rotate@i),w
   950  06F0  00F8               	movwf	(??_rotate+0)+0
   951  06F1  01F9               	clrf	((??_rotate+0)+0+1)
   952  06F2  01FA               	clrf	((??_rotate+0)+0+2)
   953  06F3  01FB               	clrf	((??_rotate+0)+0+3)
   954  06F4  087B               	movf	3+(??_rotate+0)+0,w
   955  06F5  00F3               	movwf	(?_delay+3)
   956  06F6  087A               	movf	2+(??_rotate+0)+0,w
   957  06F7  00F2               	movwf	(?_delay+2)
   958  06F8  0879               	movf	1+(??_rotate+0)+0,w
   959  06F9  00F1               	movwf	(?_delay+1)
   960  06FA  0878               	movf	0+(??_rotate+0)+0,w
   961  06FB  00F0               	movwf	(?_delay)
   962                           
   963  06FC  120A  118A  2671   	fcall	_delay
              120A  118A         
   964                           	line	180
   965                           ;PR7.c: 180: }
   966  0701  2F34               	goto	l612
   967                           	line	181
   968                           	
   969  0702                     l610:	
   970                           	line	183
   971                           	
   972  0702                     l1903:	
   973                           ;PR7.c: 181: else
   974                           ;PR7.c: 182: {
   975                           ;PR7.c: 183: i = 255-ADRESH;
   976  0702  1283               	bcf	status, 5	;RP0=0, select bank0
   977  0703  1303               	bcf	status, 6	;RP1=0, select bank0
   978  0704  031E               	decf	(30),w	;volatile
   979  0705  3AFF               	xorlw	0ffh
   980  0706  3EFF               	addlw	0FFh
   981  0707  00F8               	movwf	(??_rotate+0)+0
   982  0708  0878               	movf	(??_rotate+0)+0,w
   983  0709  00FC               	movwf	(rotate@i)
   984                           	line	184
   985                           	
   986  070A                     l1905:	
   987                           ;PR7.c: 184: RC3=1;
   988  070A  1587               	bsf	(59/8),(59)&7
   989                           	line	185
   990                           	
   991  070B                     l1907:	
   992                           ;PR7.c: 185: delay(i);
   993  070B  087C               	movf	(rotate@i),w
   994  070C  00F8               	movwf	(??_rotate+0)+0
   995  070D  01F9               	clrf	((??_rotate+0)+0+1)
   996  070E  01FA               	clrf	((??_rotate+0)+0+2)
   997  070F  01FB               	clrf	((??_rotate+0)+0+3)
   998  0710  087B               	movf	3+(??_rotate+0)+0,w
   999  0711  00F3               	movwf	(?_delay+3)
  1000  0712  087A               	movf	2+(??_rotate+0)+0,w
  1001  0713  00F2               	movwf	(?_delay+2)
  1002  0714  0879               	movf	1+(??_rotate+0)+0,w
  1003  0715  00F1               	movwf	(?_delay+1)
  1004  0716  0878               	movf	0+(??_rotate+0)+0,w
  1005  0717  00F0               	movwf	(?_delay)
  1006                           
  1007  0718  120A  118A  2671   	fcall	_delay
              120A  118A         
  1008                           	line	186
  1009                           	
  1010  071D                     l1909:	
  1011                           ;PR7.c: 186: RC3=0;
  1012  071D  1283               	bcf	status, 5	;RP0=0, select bank0
  1013  071E  1303               	bcf	status, 6	;RP1=0, select bank0
  1014  071F  1187               	bcf	(59/8),(59)&7
  1015                           	line	187
  1016                           	
  1017  0720                     l1911:	
  1018                           ;PR7.c: 187: delay(i);
  1019  0720  087C               	movf	(rotate@i),w
  1020  0721  00F8               	movwf	(??_rotate+0)+0
  1021  0722  01F9               	clrf	((??_rotate+0)+0+1)
  1022  0723  01FA               	clrf	((??_rotate+0)+0+2)
  1023  0724  01FB               	clrf	((??_rotate+0)+0+3)
  1024  0725  087B               	movf	3+(??_rotate+0)+0,w
  1025  0726  00F3               	movwf	(?_delay+3)
  1026  0727  087A               	movf	2+(??_rotate+0)+0,w
  1027  0728  00F2               	movwf	(?_delay+2)
  1028  0729  0879               	movf	1+(??_rotate+0)+0,w
  1029  072A  00F1               	movwf	(?_delay+1)
  1030  072B  0878               	movf	0+(??_rotate+0)+0,w
  1031  072C  00F0               	movwf	(?_delay)
  1032                           
  1033  072D  120A  118A  2671   	fcall	_delay
              120A  118A         
  1034  0732  2F34               	goto	l612
  1035                           	line	188
  1036                           	
  1037  0733                     l611:	
  1038  0733  2F34               	goto	l612
  1039                           	
  1040  0734                     l609:	
  1041                           	line	189
  1042                           	
  1043  0734                     l612:	
  1044  0734  0008               	return
  1045                           	opt stack 0
  1046                           GLOBAL	__end_of_rotate
  1047  0735                     	__end_of_rotate:
  1048 ;; =============== function _rotate ends ============
  1049                           
  1050                           	signat	_rotate,88
  1051                           	global	_delay
  1052                           psect	text104,local,class=CODE,delta=2
  1053                           global __ptext104
  1054  0671                     __ptext104:
  1055                           
  1056 ;; *************** function _delay *****************
  1057 ;; Defined at:
  1058 ;;		line 140 in file "C:\Users\Phang\Desktop\New folder\PR 7 _ Controlling Stepper Motor Using SD02B (2 Amp per phase)\S
       ource Code PR7\PR7.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  data            4    0[COMMON] unsigned long 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;		None               void
  1065 ;; Registers used:
  1066 ;;		wreg
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         4       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0
  1074 ;;      Temps:          4       0       0       0       0
  1075 ;;      Totals:         8       0       0       0       0
  1076 ;;Total ram usage:        8 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;;		_rotate
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           psect	text104
  1086                           	file	"C:\Users\Phang\Desktop\New folder\PR 7 _ Controlling Stepper Motor Using SD02B (2
                                  Amp per phase)\Source Code PR7\PR7.c"
  1087                           	line	140
  1088                           	global	__size_of_delay
  1089  0030                     	__size_of_delay	equ	__end_of_delay-_delay
  1090                           	
  1091  0671                     _delay:	
  1092                           	opt	stack 6
  1093                           ; Regs used in _delay: [wreg]
  1094                           	line	141
  1095                           	
  1096  0671                     l1877:	
  1097                           ;PR7.c: 141: for( ;data>0;data-=1);
  1098  0671  0873               	movf	(delay@data+3),w
  1099  0672  0472               	iorwf	(delay@data+2),w
  1100  0673  0471               	iorwf	(delay@data+1),w
  1101  0674  0470               	iorwf	(delay@data),w
  1102  0675  1D03               	skipz
  1103  0676  2E78               	goto	u2331
  1104  0677  2E79               	goto	u2330
  1105  0678                     u2331:
  1106  0678  2E7B               	goto	l1881
  1107  0679                     u2330:
  1108  0679  2EA0               	goto	l602
  1109                           	
  1110  067A                     l1879:	
  1111  067A  2EA0               	goto	l602
  1112                           	
  1113  067B                     l600:	
  1114                           	
  1115  067B                     l1881:	
  1116  067B  3001               	movlw	01h
  1117  067C  00F4               	movwf	((??_delay+0)+0)
  1118  067D  3000               	movlw	0
  1119  067E  00F5               	movwf	((??_delay+0)+0+1)
  1120  067F  3000               	movlw	0
  1121  0680  00F6               	movwf	((??_delay+0)+0+2)
  1122  0681  3000               	movlw	0
  1123  0682  00F7               	movwf	((??_delay+0)+0+3)
  1124  0683  0874               	movf	0+(??_delay+0)+0,w
  1125  0684  02F0               	subwf	(delay@data),f
  1126  0685  0875               	movf	1+(??_delay+0)+0,w
  1127  0686  1C03               	skipc
  1128  0687  0F75               	incfsz	1+(??_delay+0)+0,w
  1129  0688  2E8A               	goto	u2345
  1130  0689  2E8B               	goto	u2346
  1131  068A                     u2345:
  1132  068A  02F1               	subwf	(delay@data+1),f
  1133  068B                     u2346:
  1134  068B  0876               	movf	2+(??_delay+0)+0,w
  1135  068C  1C03               	skipc
  1136  068D  0F76               	incfsz	2+(??_delay+0)+0,w
  1137  068E  2E90               	goto	u2347
  1138  068F  2E91               	goto	u2348
  1139  0690                     u2347:
  1140  0690  02F2               	subwf	(delay@data+2),f
  1141  0691                     u2348:
  1142  0691  0877               	movf	3+(??_delay+0)+0,w
  1143  0692  1C03               	skipc
  1144  0693  0F77               	incfsz	3+(??_delay+0)+0,w
  1145  0694  2E96               	goto	u2349
  1146  0695  2E97               	goto	u2340
  1147  0696                     u2349:
  1148  0696  02F3               	subwf	(delay@data+3),f
  1149  0697                     u2340:
  1150                           
  1151  0697  0873               	movf	(delay@data+3),w
  1152  0698  0472               	iorwf	(delay@data+2),w
  1153  0699  0471               	iorwf	(delay@data+1),w
  1154  069A  0470               	iorwf	(delay@data),w
  1155  069B  1D03               	skipz
  1156  069C  2E9E               	goto	u2351
  1157  069D  2E9F               	goto	u2350
  1158  069E                     u2351:
  1159  069E  2E7B               	goto	l1881
  1160  069F                     u2350:
  1161  069F  2EA0               	goto	l602
  1162                           	
  1163  06A0                     l601:	
  1164                           	line	142
  1165                           	
  1166  06A0                     l602:	
  1167  06A0  0008               	return
  1168                           	opt stack 0
  1169                           GLOBAL	__end_of_delay
  1170  06A1                     	__end_of_delay:
  1171 ;; =============== function _delay ends ============
  1172                           
  1173                           	signat	_delay,4216
  1174                           psect	text105,local,class=CODE,delta=2
  1175                           global __ptext105
  1176  0000                     __ptext105:
  1177                           	global	btemp
  1178  007E                     	btemp set 07Eh
  1179                           
  1180                           	DABS	1,126,2	;btemp
  1181                           	global	wtemp0
  1182  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Wed Jun 20 22:45:12 2012

                  _on 0021                   l600 067B                   l601 06A0                   l602 06A0  
                 l610 0702                   l611 0733                   l612 0734                   l605 06AA  
                 l606 06AA                   l607 06AF                   l608 06B6                   l609 0734  
                 l570 0772                   l571 0757                   l580 0799                   l572 0757  
                 l581 079E                   l573 075C                   l582 07EB                   l590 07D9  
                 l574 0793                   l591 07EA                   l583 07B5                   l575 0778  
                 l584 07DB                   l576 0778                   l593 07FA                   l585 07CC  
                 l577 077D                   l569 0751                   l594 07FB                   l586 07C9  
                 l578 07B4                   l595 07FC                   l587 07CB                   l579 0799  
                 l596 07FD                   l588 07DA                   l597 07FD                   l589 07D7  
                 _RB1 0031                   _RC0 0038                   _RB2 0032                   _RC1 0039  
                 _RC2 003A                   _RB4 0034                   _RC3 003B                   _RC4 003C  
                 _RC5 003D                   _ccw 0020                   _run 0022                  l1901 06EF  
                l1911 0720                  l1903 0702                  l1905 070A                  l1921 0743  
                l1913 0735                  l1907 070B                  l1931 074F                  l1923 0746  
                l1915 073C                  l1909 071D                  l1941 076F                  l1933 0751  
                l1925 0749                  l1917 0740                  l1951 0790                  l1935 0756  
                l1943 0772                  l1927 074D                  l1919 0742                  l1881 067B  
                l1961 07B1                  l1945 0777                  l1953 0793                  l1937 075C  
                l1929 074E                  l1891 06B6                  l1883 06A1                  l1971 07BF  
                l1963 07B5                  l1955 0798                  l1947 077D                  l1939 0769  
                l1877 0671                  l1893 06D3                  l1885 06A6                  l1973 07C3  
                l1965 07B9                  l1957 079E                  l1981 07EB                  l1949 078A  
                l1879 067A                  l1895 06D7                  l1887 06AF                  l1983 07F1  
                l1975 07CD                  l1967 07BA                  l1959 07AB                  l1897 06DA  
                l1889 06B4                  l1985 07F5                  l1977 07D1                  l1969 07BE  
                l1899 06EC                  l1979 07DF                  _ADGO 00FA                  u2400 075B  
                u2401 075A                  u2330 0679                  u2410 0776                  u2331 0678  
                u2411 0775                  u2340 0697                  u2500 07F5                  u2420 077C  
                u2501 07F4                  u2421 077B                  u2350 069F                  u2510 07F9  
                u2430 0797                  u2351 069E                  u2511 07F8                  u2431 0796  
                u2360 06AE                  u2440 079D                  u2345 068A                  u2361 06AD  
                u2441 079C                  u2346 068B                  u2370 06B4                  u2450 07B9  
                u2347 0690                  u2371 06B3                  u2348 0691                  u2380 06D3  
                u2460 07BE                  u2349 0696                  u2381 06D2                  u2470 07C3  
                u2390 0755                  u2391 0754                  u2480 07D1                  u2385 06CF  
                u2490 07F1                  u2491 07F0                  _main 0735                  btemp 007E  
                start 0000                 ?_main 0070                 _PORTC 0007                 _TRISA 0085  
               _TRISB 0086                 _TRISC 0087                 _delay 0671                 status 0003  
               wtemp0 007E          __end_of_main 0800                ??_main 007D                ?_delay 0070  
              _ADCON0 001F                _ADCON1 009F                _ADRESH 001E                _rotate 06A1  
      __pcstackCOMMON 0070         __end_of_delay 06A1               ??_delay 0074            __pbssBANK0 0020  
          __pmaintext 0735               ?_rotate 0070       __size_of_rotate 0094  end_of_initialization 066D  
             rotate@i 007C        __end_of_rotate 0735   start_initialization 066A              ??_rotate 0078  
       __pcstackBANK0 0023             __ptext102 0000             __ptext103 06A1             __ptext104 0671  
           __ptext105 0000        __size_of_delay 0030             delay@data 0070         __size_of_main 00CB  
            main@turn 0023  
