

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Tue Jul 21 11:04:17 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F876A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 18 "../../Source File/PR7.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 18 "../../Source File/PR7.c"
    45  2007  3F32               	dw 0x3F32 ;#
    46                           	FNCALL	_main,_delay
    47                           	FNCALL	_main,_rotate
    48                           	FNCALL	_rotate,_delay
    49                           	FNROOT	_main
    50                           	global	_ccw
    51                           	global	_on
    52                           	global	_run
    53                           	global	_ADCON0
    54                           psect	text118,local,class=CODE,delta=2
    55                           global __ptext118
    56  0000                     __ptext118:
    57  001F                     _ADCON0	set	31
    58                           	global	_ADRESH
    59  001E                     _ADRESH	set	30
    60                           	global	_PORTC
    61  0007                     _PORTC	set	7
    62                           	global	_CARRY
    63  0018                     _CARRY	set	24
    64                           	global	_GIE
    65  005F                     _GIE	set	95
    66                           	global	_GO
    67  00FA                     _GO	set	250
    68                           	global	_RB1
    69  0031                     _RB1	set	49
    70                           	global	_RB2
    71  0032                     _RB2	set	50
    72                           	global	_RB4
    73  0034                     _RB4	set	52
    74                           	global	_RC0
    75  0038                     _RC0	set	56
    76                           	global	_RC1
    77  0039                     _RC1	set	57
    78                           	global	_RC2
    79  003A                     _RC2	set	58
    80                           	global	_RC3
    81  003B                     _RC3	set	59
    82                           	global	_RC4
    83  003C                     _RC4	set	60
    84                           	global	_RC5
    85  003D                     _RC5	set	61
    86                           	global	_ADCON1
    87  009F                     _ADCON1	set	159
    88                           	global	_TRISA
    89  0085                     _TRISA	set	133
    90                           	global	_TRISB
    91  0086                     _TRISB	set	134
    92                           	global	_TRISC
    93  0087                     _TRISC	set	135
    94                           	global	_EEADR
    95  010D                     _EEADR	set	269
    96                           	global	_EEDATA
    97  010C                     _EEDATA	set	268
    98                           	global	_EECON1
    99  018C                     _EECON1	set	396
   100                           	global	_EECON2
   101  018D                     _EECON2	set	397
   102                           	global	_RD
   103  0C60                     _RD	set	3168
   104                           	global	_WR
   105  0C61                     _WR	set	3169
   106                           	global	_WREN
   107  0C62                     _WREN	set	3170
   108                           	file	"C:\DOCUME~1\Sales\LOCALS~1\Temp\s2f4."
   109                           	line	#
   110                           psect cinit,class=CODE,delta=2
   111                           global start_initialization
   112  067B                     start_initialization:
   113                           
   114                           psect	bssBANK0,class=BANK0,space=1
   115                           global __pbssBANK0
   116  0020                     __pbssBANK0:
   117  0020                     _ccw:
   118  0020                            ds      1
   119                           
   120  0021                     _on:
   121  0021                            ds      1
   122                           
   123  0022                     _run:
   124  0022                            ds      1
   125                           
   126                           ; Clear objects allocated to BANK0
   127                           psect cinit,class=CODE,delta=2
   128  067B  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   129  067C  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   130  067D  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   131                           psect cinit,class=CODE,delta=2
   132                           global end_of_initialization
   133                           
   134                           ;End of C runtime variable initialization code
   135                           
   136  067E                     end_of_initialization:
   137  067E  0183               clrf status
   138  067F  120A  118A  2F42   ljmp _main	;jump to C main() function
   139                           psect	cstackCOMMON,class=COMMON,space=1
   140                           global __pcstackCOMMON
   141  0070                     __pcstackCOMMON:
   142                           	global	?_delay
   143  0070                     ?_delay:	; 0 bytes @ 0x0
   144                           	global	?_rotate
   145  0070                     ?_rotate:	; 0 bytes @ 0x0
   146                           	global	?_main
   147  0070                     ?_main:	; 0 bytes @ 0x0
   148                           	global	delay@data
   149  0070                     delay@data:	; 4 bytes @ 0x0
   150  0070                     	ds	4
   151                           	global	??_delay
   152  0074                     ??_delay:	; 0 bytes @ 0x4
   153  0074                     	ds	4
   154                           	global	??_rotate
   155  0078                     ??_rotate:	; 0 bytes @ 0x8
   156  0078                     	ds	4
   157                           	global	rotate@i
   158  007C                     rotate@i:	; 1 bytes @ 0xC
   159  007C                     	ds	1
   160                           	global	??_main
   161  007D                     ??_main:	; 0 bytes @ 0xD
   162  007D                     	ds	1
   163                           psect	cstackBANK0,class=BANK0,space=1
   164                           global __pcstackBANK0
   165  0023                     __pcstackBANK0:
   166                           	global	main@turn
   167  0023                     main@turn:	; 1 bytes @ 0x0
   168  0023                     	ds	1
   169 ;;Data sizes: Strings 0, constant 0, data 0, bss 3, persistent 0 stack 0
   170 ;;Auto spaces:   Size  Autos    Used
   171 ;; COMMON          14     14      14
   172 ;; BANK0           80      1       4
   173 ;; BANK1           80      0       0
   174 ;; BANK3           96      0       0
   175 ;; BANK2           96      0       0
   176                           
   177 ;;
   178 ;; Pointer list with targets:
   179                           
   180                           
   181                           
   182 ;;
   183 ;; Critical Paths under _main in COMMON
   184 ;;
   185 ;;   _main->_rotate
   186 ;;   _rotate->_delay
   187 ;;
   188 ;; Critical Paths under _main in BANK0
   189 ;;
   190 ;;   None.
   191 ;;
   192 ;; Critical Paths under _main in BANK1
   193 ;;
   194 ;;   None.
   195 ;;
   196 ;; Critical Paths under _main in BANK3
   197 ;;
   198 ;;   None.
   199 ;;
   200 ;; Critical Paths under _main in BANK2
   201 ;;
   202 ;;   None.
   203                           
   204 ;;
   205 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   206 ;;
   207                           
   208 ;;
   209 ;;Call Graph Tables:
   210 ;;
   211 ;; ---------------------------------------------------------------------------------
   212 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   213 ;; ---------------------------------------------------------------------------------
   214 ;; (0) _main                                                 2     2      0     182
   215 ;;                                             13 COMMON     1     1      0
   216 ;;                                              0 BANK0      1     1      0
   217 ;;                              _delay
   218 ;;                             _rotate
   219 ;; ---------------------------------------------------------------------------------
   220 ;; (1) _rotate                                               5     5      0     136
   221 ;;                                              8 COMMON     5     5      0
   222 ;;                              _delay
   223 ;; ---------------------------------------------------------------------------------
   224 ;; (2) _delay                                                8     4      4      45
   225 ;;                                              0 COMMON     8     4      4
   226 ;; ---------------------------------------------------------------------------------
   227 ;; Estimated maximum stack depth 2
   228 ;; ---------------------------------------------------------------------------------
   229                           
   230 ;; Call Graph Graphs:
   231                           
   232 ;; _main (ROOT)
   233 ;;   _delay
   234 ;;   _rotate
   235 ;;     _delay
   236 ;;
   237                           
   238 ;; Address spaces:
   239                           
   240 ;;Name               Size   Autos  Total    Cost      Usage
   241 ;;BITCOMMON            E      0       0       0        0.0%
   242 ;;EEDATA             100      0       0       0        0.0%
   243 ;;NULL                 0      0       0       0        0.0%
   244 ;;CODE                 0      0       0       0        0.0%
   245 ;;COMMON               E      E       E       1      100.0%
   246 ;;BITSFR0              0      0       0       1        0.0%
   247 ;;SFR0                 0      0       0       1        0.0%
   248 ;;BITSFR1              0      0       0       2        0.0%
   249 ;;SFR1                 0      0       0       2        0.0%
   250 ;;STACK                0      0       2       2        0.0%
   251 ;;ABS                  0      0      12       3        0.0%
   252 ;;BITBANK0            50      0       0       4        0.0%
   253 ;;BITSFR3              0      0       0       4        0.0%
   254 ;;SFR3                 0      0       0       4        0.0%
   255 ;;BANK0               50      1       4       5        5.0%
   256 ;;BITSFR2              0      0       0       5        0.0%
   257 ;;SFR2                 0      0       0       5        0.0%
   258 ;;BITBANK1            50      0       0       6        0.0%
   259 ;;BANK1               50      0       0       7        0.0%
   260 ;;BITBANK3            60      0       0       8        0.0%
   261 ;;BANK3               60      0       0       9        0.0%
   262 ;;BITBANK2            60      0       0      10        0.0%
   263 ;;BANK2               60      0       0      11        0.0%
   264 ;;DATA                 0      0      14      12        0.0%
   265                           
   266                           	global	_main
   267                           psect	maintext,global,class=CODE,delta=2
   268                           global __pmaintext
   269  0742                     __pmaintext:
   270                           
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 54 in file "../../Source File/PR7.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;  turn            1    0[BANK0 ] unsigned char 
   278 ;; Return value:  Size  Location     Type
   279 ;;		None               void
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 17F/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         0       1       0       0       0
   289 ;;      Temps:          1       0       0       0       0
   290 ;;      Totals:         1       1       0       0       0
   291 ;;Total ram usage:        2 bytes
   292 ;; Hardware stack levels required when called:    2
   293 ;; This function calls:
   294 ;;		_delay
   295 ;;		_rotate
   296 ;; This function is called by:
   297 ;;		Startup code after reset
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           psect	maintext
   301                           	file	"../../Source File/PR7.c"
   302                           	line	54
   303                           	global	__size_of_main
   304  00BE                     	__size_of_main	equ	__end_of_main-_main
   305                           	
   306  0742                     _main:	
   307                           	opt	stack 6
   308                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   309                           	line	56
   310                           	
   311  0742                     l2643:	
   312                           ;PR7.c: 56: unsigned char turn=0;
   313  0742  1283               	bcf	status, 5	;RP0=0, select bank0
   314  0743  1303               	bcf	status, 6	;RP1=0, select bank0
   315  0744  01A3               	clrf	(main@turn)
   316                           	line	58
   317                           	
   318  0745                     l2645:	
   319                           ;PR7.c: 58: TRISA=0b11111111;
   320  0745  30FF               	movlw	(0FFh)
   321  0746  1683               	bsf	status, 5	;RP0=1, select bank1
   322  0747  1303               	bcf	status, 6	;RP1=0, select bank1
   323  0748  0085               	movwf	(133)^080h	;volatile
   324                           	line	59
   325                           ;PR7.c: 59: TRISB=0b11111111;
   326  0749  30FF               	movlw	(0FFh)
   327  074A  0086               	movwf	(134)^080h	;volatile
   328                           	line	60
   329                           	
   330  074B                     l2647:	
   331                           ;PR7.c: 60: TRISC=0B00000000;
   332  074B  0187               	clrf	(135)^080h	;volatile
   333                           	line	62
   334                           	
   335  074C                     l2649:	
   336                           ;PR7.c: 62: PORTC=0;
   337  074C  1283               	bcf	status, 5	;RP0=0, select bank0
   338  074D  1303               	bcf	status, 6	;RP1=0, select bank0
   339  074E  0187               	clrf	(7)	;volatile
   340                           	line	63
   341                           	
   342  074F                     l2651:	
   343                           ;PR7.c: 63: ADCON1=0b00000000;
   344  074F  1683               	bsf	status, 5	;RP0=1, select bank1
   345  0750  1303               	bcf	status, 6	;RP1=0, select bank1
   346  0751  019F               	clrf	(159)^080h	;volatile
   347                           	line	64
   348                           	
   349  0752                     l2653:	
   350                           ;PR7.c: 64: ADCON0=0b01000001;
   351  0752  3041               	movlw	(041h)
   352  0753  1283               	bcf	status, 5	;RP0=0, select bank0
   353  0754  1303               	bcf	status, 6	;RP1=0, select bank0
   354  0755  009F               	movwf	(31)	;volatile
   355                           	line	67
   356                           	
   357  0756                     l2655:	
   358                           ;PR7.c: 67: RC0 = 0;
   359  0756  1007               	bcf	(56/8),(56)&7
   360                           	line	68
   361                           	
   362  0757                     l2657:	
   363                           ;PR7.c: 68: RC1 = 0;
   364  0757  1087               	bcf	(57/8),(57)&7
   365                           	line	69
   366                           	
   367  0758                     l2659:	
   368                           ;PR7.c: 69: RC2 = 0;
   369  0758  1107               	bcf	(58/8),(58)&7
   370  0759  2F5A               	goto	l2661
   371                           	line	72
   372                           ;PR7.c: 72: while(1)
   373                           	
   374  075A                     l623:	
   375                           	line	74
   376                           	
   377  075A                     l2661:	
   378                           ;PR7.c: 73: {
   379                           ;PR7.c: 74: if(!RB1)
   380  075A  1886               	btfsc	(49/8),(49)&7
   381  075B  2F5D               	goto	u2471
   382  075C  2F5E               	goto	u2470
   383  075D                     u2471:
   384  075D  2F7B               	goto	l2671
   385  075E                     u2470:
   386  075E  2F60               	goto	l625
   387                           	line	76
   388                           	
   389  075F                     l2663:	
   390                           ;PR7.c: 75: {
   391                           ;PR7.c: 76: while(RB1==0)continue;
   392  075F  2F60               	goto	l625
   393                           	
   394  0760                     l626:	
   395                           	
   396  0760                     l625:	
   397  0760  1C86               	btfss	(49/8),(49)&7
   398  0761  2F63               	goto	u2481
   399  0762  2F64               	goto	u2480
   400  0763                     u2481:
   401  0763  2F60               	goto	l625
   402  0764                     u2480:
   403  0764  2F65               	goto	l2665
   404                           	
   405  0765                     l627:	
   406                           	line	77
   407                           	
   408  0765                     l2665:	
   409                           ;PR7.c: 77: delay(6250);
   410  0765  3000               	movlw	0
   411  0766  00F3               	movwf	(?_delay+3)
   412  0767  3000               	movlw	0
   413  0768  00F2               	movwf	(?_delay+2)
   414  0769  3018               	movlw	018h
   415  076A  00F1               	movwf	(?_delay+1)
   416  076B  306A               	movlw	06Ah
   417  076C  00F0               	movwf	(?_delay)
   418                           
   419  076D  120A  118A  2682   	fcall	_delay
              120A  118A         
   420                           	line	78
   421                           	
   422  0772                     l2667:	
   423                           ;PR7.c: 78: on^=1;
   424  0772  3001               	movlw	(01h)
   425  0773  00FD               	movwf	(??_main+0)+0
   426  0774  087D               	movf	(??_main+0)+0,w
   427  0775  1283               	bcf	status, 5	;RP0=0, select bank0
   428  0776  1303               	bcf	status, 6	;RP1=0, select bank0
   429  0777  06A1               	xorwf	(_on),f
   430                           	line	79
   431                           	
   432  0778                     l2669:	
   433                           ;PR7.c: 79: RC0^=1;
   434  0778  3001               	movlw	1<<((56)&7)
   435  0779  0687               	xorwf	((56)/8),f
   436  077A  2F7B               	goto	l2671
   437                           	line	80
   438                           	
   439  077B                     l624:	
   440                           	line	81
   441                           	
   442  077B                     l2671:	
   443                           ;PR7.c: 80: }
   444                           ;PR7.c: 81: if(!RB2)
   445  077B  1906               	btfsc	(50/8),(50)&7
   446  077C  2F7E               	goto	u2491
   447  077D  2F7F               	goto	u2490
   448  077E                     u2491:
   449  077E  2F9C               	goto	l2681
   450  077F                     u2490:
   451  077F  2F81               	goto	l629
   452                           	line	83
   453                           	
   454  0780                     l2673:	
   455                           ;PR7.c: 82: {
   456                           ;PR7.c: 83: while(RB2==0)continue;
   457  0780  2F81               	goto	l629
   458                           	
   459  0781                     l630:	
   460                           	
   461  0781                     l629:	
   462  0781  1D06               	btfss	(50/8),(50)&7
   463  0782  2F84               	goto	u2501
   464  0783  2F85               	goto	u2500
   465  0784                     u2501:
   466  0784  2F81               	goto	l629
   467  0785                     u2500:
   468  0785  2F86               	goto	l2675
   469                           	
   470  0786                     l631:	
   471                           	line	84
   472                           	
   473  0786                     l2675:	
   474                           ;PR7.c: 84: delay(6250);
   475  0786  3000               	movlw	0
   476  0787  00F3               	movwf	(?_delay+3)
   477  0788  3000               	movlw	0
   478  0789  00F2               	movwf	(?_delay+2)
   479  078A  3018               	movlw	018h
   480  078B  00F1               	movwf	(?_delay+1)
   481  078C  306A               	movlw	06Ah
   482  078D  00F0               	movwf	(?_delay)
   483                           
   484  078E  120A  118A  2682   	fcall	_delay
              120A  118A         
   485                           	line	85
   486                           	
   487  0793                     l2677:	
   488                           ;PR7.c: 85: ccw^=1;
   489  0793  3001               	movlw	(01h)
   490  0794  00FD               	movwf	(??_main+0)+0
   491  0795  087D               	movf	(??_main+0)+0,w
   492  0796  1283               	bcf	status, 5	;RP0=0, select bank0
   493  0797  1303               	bcf	status, 6	;RP1=0, select bank0
   494  0798  06A0               	xorwf	(_ccw),f
   495                           	line	86
   496                           	
   497  0799                     l2679:	
   498                           ;PR7.c: 86: RC1^=1;
   499  0799  3002               	movlw	1<<((57)&7)
   500  079A  0687               	xorwf	((57)/8),f
   501  079B  2F9C               	goto	l2681
   502                           	line	87
   503                           	
   504  079C                     l628:	
   505                           	line	88
   506                           	
   507  079C                     l2681:	
   508                           ;PR7.c: 87: }
   509                           ;PR7.c: 88: if(!RB4)
   510  079C  1A06               	btfsc	(52/8),(52)&7
   511  079D  2F9F               	goto	u2511
   512  079E  2FA0               	goto	u2510
   513  079F                     u2511:
   514  079F  2FEB               	goto	l636
   515  07A0                     u2510:
   516  07A0  2FA2               	goto	l633
   517                           	line	90
   518                           	
   519  07A1                     l2683:	
   520                           ;PR7.c: 89: {
   521                           ;PR7.c: 90: while(RB4==0)continue;
   522  07A1  2FA2               	goto	l633
   523                           	
   524  07A2                     l634:	
   525                           	
   526  07A2                     l633:	
   527  07A2  1E06               	btfss	(52/8),(52)&7
   528  07A3  2FA5               	goto	u2521
   529  07A4  2FA6               	goto	u2520
   530  07A5                     u2521:
   531  07A5  2FA2               	goto	l633
   532  07A6                     u2520:
   533  07A6  2FA7               	goto	l2685
   534                           	
   535  07A7                     l635:	
   536                           	line	91
   537                           	
   538  07A7                     l2685:	
   539                           ;PR7.c: 91: delay(6250);
   540  07A7  3000               	movlw	0
   541  07A8  00F3               	movwf	(?_delay+3)
   542  07A9  3000               	movlw	0
   543  07AA  00F2               	movwf	(?_delay+2)
   544  07AB  3018               	movlw	018h
   545  07AC  00F1               	movwf	(?_delay+1)
   546  07AD  306A               	movlw	06Ah
   547  07AE  00F0               	movwf	(?_delay)
   548                           
   549  07AF  120A  118A  2682   	fcall	_delay
              120A  118A         
   550                           	line	92
   551                           	
   552  07B4                     l2687:	
   553                           ;PR7.c: 92: run^=1;
   554  07B4  3001               	movlw	(01h)
   555  07B5  00FD               	movwf	(??_main+0)+0
   556  07B6  087D               	movf	(??_main+0)+0,w
   557  07B7  1283               	bcf	status, 5	;RP0=0, select bank0
   558  07B8  1303               	bcf	status, 6	;RP1=0, select bank0
   559  07B9  06A2               	xorwf	(_run),f
   560                           	line	93
   561                           	
   562  07BA                     l2689:	
   563                           ;PR7.c: 93: RC2^=1;
   564  07BA  3004               	movlw	1<<((58)&7)
   565  07BB  0687               	xorwf	((58)/8),f
   566  07BC  2FEB               	goto	l636
   567                           	line	94
   568                           	
   569  07BD                     l632:	
   570                           	line	96
   571                           ;PR7.c: 94: }
   572                           ;PR7.c: 96: while(RB1&&RB2&&RB4)
   573  07BD  2FEB               	goto	l636
   574                           	
   575  07BE                     l637:	
   576                           	line	98
   577                           	
   578  07BE                     l2691:	
   579                           ;PR7.c: 97: {
   580                           ;PR7.c: 98: if(on)
   581  07BE  0821               	movf	(_on),w
   582  07BF  1D03               	skipz
   583  07C0  2FC2               	goto	u2530
   584  07C1  2FE4               	goto	l638
   585  07C2                     u2530:
   586                           	line	100
   587                           	
   588  07C2                     l2693:	
   589                           ;PR7.c: 99: {
   590                           ;PR7.c: 100: RC5=1;
   591  07C2  1687               	bsf	(61/8),(61)&7
   592                           	line	102
   593                           	
   594  07C3                     l2695:	
   595                           ;PR7.c: 102: if(ccw)
   596  07C3  0820               	movf	(_ccw),w
   597  07C4  1D03               	skipz
   598  07C5  2FC7               	goto	u2540
   599  07C6  2FD5               	goto	l639
   600  07C7                     u2540:
   601                           	line	104
   602                           	
   603  07C7                     l2697:	
   604                           ;PR7.c: 103: {
   605                           ;PR7.c: 104: RC4=1;
   606  07C7  1607               	bsf	(60/8),(60)&7
   607                           	line	105
   608                           	
   609  07C8                     l2699:	
   610                           ;PR7.c: 105: if(run)
   611  07C8  0822               	movf	(_run),w
   612  07C9  1D03               	skipz
   613  07CA  2FCC               	goto	u2550
   614  07CB  2FD2               	goto	l640
   615  07CC                     u2550:
   616                           	line	107
   617                           	
   618  07CC                     l2701:	
   619                           ;PR7.c: 106: {
   620                           ;PR7.c: 107: rotate();
   621  07CC  120A  118A  26B2   	fcall	_rotate
              120A  118A         
   622                           	line	108
   623                           ;PR7.c: 108: }
   624  07D1  2FEB               	goto	l636
   625                           	line	109
   626                           	
   627  07D2                     l640:	
   628                           	line	111
   629                           ;PR7.c: 109: else
   630                           ;PR7.c: 110: {
   631                           ;PR7.c: 111: RC3=0;
   632  07D2  1187               	bcf	(59/8),(59)&7
   633  07D3  2FEB               	goto	l636
   634                           	line	112
   635                           	
   636  07D4                     l641:	
   637                           	line	113
   638                           ;PR7.c: 112: }
   639                           ;PR7.c: 113: }
   640  07D4  2FEB               	goto	l636
   641                           	line	114
   642                           	
   643  07D5                     l639:	
   644                           	line	116
   645                           ;PR7.c: 114: else
   646                           ;PR7.c: 115: {
   647                           ;PR7.c: 116: RC4=0;
   648  07D5  1207               	bcf	(60/8),(60)&7
   649                           	line	117
   650                           	
   651  07D6                     l2703:	
   652                           ;PR7.c: 117: if(run)
   653  07D6  0822               	movf	(_run),w
   654  07D7  1D03               	skipz
   655  07D8  2FDA               	goto	u2560
   656  07D9  2FE0               	goto	l643
   657  07DA                     u2560:
   658                           	line	119
   659                           	
   660  07DA                     l2705:	
   661                           ;PR7.c: 118: {
   662                           ;PR7.c: 119: rotate();
   663  07DA  120A  118A  26B2   	fcall	_rotate
              120A  118A         
   664                           	line	120
   665                           ;PR7.c: 120: }
   666  07DF  2FEB               	goto	l636
   667                           	line	121
   668                           	
   669  07E0                     l643:	
   670                           	line	123
   671                           ;PR7.c: 121: else
   672                           ;PR7.c: 122: {
   673                           ;PR7.c: 123: RC3=0;
   674  07E0  1187               	bcf	(59/8),(59)&7
   675  07E1  2FEB               	goto	l636
   676                           	line	124
   677                           	
   678  07E2                     l644:	
   679  07E2  2FEB               	goto	l636
   680                           	line	125
   681                           	
   682  07E3                     l642:	
   683                           	line	126
   684                           ;PR7.c: 124: }
   685                           ;PR7.c: 125: }
   686                           ;PR7.c: 126: }
   687  07E3  2FEB               	goto	l636
   688                           	line	127
   689                           	
   690  07E4                     l638:	
   691                           	line	129
   692                           ;PR7.c: 127: else
   693                           ;PR7.c: 128: {
   694                           ;PR7.c: 129: RC0=0;
   695  07E4  1007               	bcf	(56/8),(56)&7
   696                           	line	130
   697                           ;PR7.c: 130: RC1=0;
   698  07E5  1087               	bcf	(57/8),(57)&7
   699                           	line	131
   700                           ;PR7.c: 131: RC2=0;
   701  07E6  1107               	bcf	(58/8),(58)&7
   702                           	line	132
   703                           ;PR7.c: 132: RC5=0;
   704  07E7  1287               	bcf	(61/8),(61)&7
   705                           	line	133
   706                           ;PR7.c: 133: ccw=0;
   707  07E8  01A0               	clrf	(_ccw)
   708                           	line	134
   709                           ;PR7.c: 134: run=0;
   710  07E9  01A2               	clrf	(_run)
   711  07EA  2FEB               	goto	l636
   712                           	line	135
   713                           	
   714  07EB                     l645:	
   715                           	line	136
   716                           	
   717  07EB                     l636:	
   718                           	line	96
   719  07EB  1283               	bcf	status, 5	;RP0=0, select bank0
   720  07EC  1303               	bcf	status, 6	;RP1=0, select bank0
   721  07ED  1C86               	btfss	(49/8),(49)&7
   722  07EE  2FF0               	goto	u2571
   723  07EF  2FF1               	goto	u2570
   724  07F0                     u2571:
   725  07F0  2F5A               	goto	l2661
   726  07F1                     u2570:
   727                           	
   728  07F1                     l2707:	
   729  07F1  1D06               	btfss	(50/8),(50)&7
   730  07F2  2FF4               	goto	u2581
   731  07F3  2FF5               	goto	u2580
   732  07F4                     u2581:
   733  07F4  2F5A               	goto	l2661
   734  07F5                     u2580:
   735                           	
   736  07F5                     l2709:	
   737  07F5  1A06               	btfsc	(52/8),(52)&7
   738  07F6  2FF8               	goto	u2591
   739  07F7  2FF9               	goto	u2590
   740  07F8                     u2591:
   741  07F8  2FBE               	goto	l2691
   742  07F9                     u2590:
   743  07F9  2F5A               	goto	l2661
   744                           	
   745  07FA                     l647:	
   746  07FA  2F5A               	goto	l2661
   747                           	
   748  07FB                     l648:	
   749  07FB  2F5A               	goto	l2661
   750                           	line	137
   751                           	
   752  07FC                     l649:	
   753                           	line	72
   754  07FC  2F5A               	goto	l2661
   755                           	
   756  07FD                     l650:	
   757                           	line	138
   758                           	
   759  07FD                     l651:	
   760                           	global	start
   761  07FD  120A  118A  2800   	ljmp	start
   762                           	opt stack 0
   763                           GLOBAL	__end_of_main
   764  0800                     	__end_of_main:
   765 ;; =============== function _main ends ============
   766                           
   767                           	signat	_main,88
   768                           	global	_rotate
   769                           psect	text119,local,class=CODE,delta=2
   770                           global __ptext119
   771  06B2                     __ptext119:
   772                           
   773 ;; *************** function _rotate *****************
   774 ;; Defined at:
   775 ;;		line 149 in file "../../Source File/PR7.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  i               1   12[COMMON] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;		None               void
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         1       0       0       0       0
   791 ;;      Temps:          4       0       0       0       0
   792 ;;      Totals:         5       0       0       0       0
   793 ;;Total ram usage:        5 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    1
   796 ;; This function calls:
   797 ;;		_delay
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           psect	text119
   803                           	file	"../../Source File/PR7.c"
   804                           	line	149
   805                           	global	__size_of_rotate
   806  0090                     	__size_of_rotate	equ	__end_of_rotate-_rotate
   807                           	
   808  06B2                     _rotate:	
   809                           	opt	stack 6
   810                           ; Regs used in _rotate: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   811                           	line	150
   812                           	
   813  06B2                     l2615:	
   814                           ;PR7.c: 150: unsigned char i=0;
   815  06B2  01FC               	clrf	(rotate@i)
   816                           	line	152
   817                           ;PR7.c: 152: GO=1;
   818  06B3  1283               	bcf	status, 5	;RP0=0, select bank0
   819  06B4  1303               	bcf	status, 6	;RP1=0, select bank0
   820  06B5  151F               	bsf	(250/8),(250)&7
   821                           	line	153
   822                           ;PR7.c: 153: while(GO==1)continue;
   823  06B6  2EB7               	goto	l659
   824                           	
   825  06B7                     l660:	
   826                           	
   827  06B7                     l659:	
   828  06B7  191F               	btfsc	(250/8),(250)&7
   829  06B8  2EBA               	goto	u2441
   830  06B9  2EBB               	goto	u2440
   831  06BA                     u2441:
   832  06BA  2EB7               	goto	l659
   833  06BB                     u2440:
   834  06BB  2EBC               	goto	l2617
   835                           	
   836  06BC                     l661:	
   837                           	line	171
   838                           	
   839  06BC                     l2617:	
   840                           ;PR7.c: 171: if(ADRESH==0)
   841  06BC  089E               	movf	(30),f
   842  06BD  1D03               	skipz	;volatile
   843  06BE  2EC0               	goto	u2451
   844  06BF  2EC1               	goto	u2450
   845  06C0                     u2451:
   846  06C0  2EC3               	goto	l2621
   847  06C1                     u2450:
   848                           	line	173
   849                           	
   850  06C1                     l2619:	
   851                           ;PR7.c: 172: {
   852                           ;PR7.c: 173: RC3=0;
   853  06C1  1187               	bcf	(59/8),(59)&7
   854                           	line	174
   855                           ;PR7.c: 174: }
   856  06C2  2F41               	goto	l666
   857                           	line	176
   858                           	
   859  06C3                     l662:	
   860                           	
   861  06C3                     l2621:	
   862                           ;PR7.c: 176: else if((255-ADRESH)<=6)
   863  06C3  081E               	movf	(30),w	;volatile
   864  06C4  00F8               	movwf	(??_rotate+0)+0
   865  06C5  01F9               	clrf	(??_rotate+0)+0+1
   866  06C6  09F8               	comf	(??_rotate+0)+0,f
   867  06C7  09F9               	comf	(??_rotate+0)+1,f
   868  06C8  0AF8               	incf	(??_rotate+0)+0,f
   869  06C9  1903               	skipnz
   870  06CA  0AF9               	incf	(??_rotate+0)+1,f
   871  06CB  0878               	movf	0+(??_rotate+0)+0,w
   872  06CC  3EFF               	addlw	low(0FFh)
   873  06CD  00FA               	movwf	(??_rotate+2)+0
   874  06CE  0879               	movf	1+(??_rotate+0)+0,w
   875  06CF  1803               	skipnc
   876  06D0  3E01               	addlw	1
   877  06D1  3E00               	addlw	high(0FFh)
   878  06D2  00FB               	movwf	1+(??_rotate+2)+0
   879  06D3  087B               	movf	1+(??_rotate+2)+0,w
   880  06D4  3A80               	xorlw	80h
   881  06D5  00FF               	movwf	btemp+1
   882  06D6  3080               	movlw	(high(07h))^80h
   883  06D7  027F               	subwf	btemp+1,w
   884  06D8  1D03               	skipz
   885  06D9  2EDC               	goto	u2465
   886  06DA  3007               	movlw	low(07h)
   887  06DB  027A               	subwf	0+(??_rotate+2)+0,w
   888  06DC                     u2465:
   889                           
   890  06DC  1803               	skipnc
   891  06DD  2EDF               	goto	u2461
   892  06DE  2EE0               	goto	u2460
   893  06DF                     u2461:
   894  06DF  2F0F               	goto	l2633
   895  06E0                     u2460:
   896                           	line	178
   897                           	
   898  06E0                     l2623:	
   899                           ;PR7.c: 177: {
   900                           ;PR7.c: 178: i = 6;
   901  06E0  3006               	movlw	(06h)
   902  06E1  00F8               	movwf	(??_rotate+0)+0
   903  06E2  0878               	movf	(??_rotate+0)+0,w
   904  06E3  00FC               	movwf	(rotate@i)
   905                           	line	179
   906                           	
   907  06E4                     l2625:	
   908                           ;PR7.c: 179: RC3=1;
   909  06E4  1283               	bcf	status, 5	;RP0=0, select bank0
   910  06E5  1303               	bcf	status, 6	;RP1=0, select bank0
   911  06E6  1587               	bsf	(59/8),(59)&7
   912                           	line	180
   913                           	
   914  06E7                     l2627:	
   915                           ;PR7.c: 180: delay(i);
   916  06E7  087C               	movf	(rotate@i),w
   917  06E8  00F8               	movwf	(??_rotate+0)+0
   918  06E9  01F9               	clrf	((??_rotate+0)+0+1)
   919  06EA  01FA               	clrf	((??_rotate+0)+0+2)
   920  06EB  01FB               	clrf	((??_rotate+0)+0+3)
   921  06EC  087B               	movf	3+(??_rotate+0)+0,w
   922  06ED  00F3               	movwf	(?_delay+3)
   923  06EE  087A               	movf	2+(??_rotate+0)+0,w
   924  06EF  00F2               	movwf	(?_delay+2)
   925  06F0  0879               	movf	1+(??_rotate+0)+0,w
   926  06F1  00F1               	movwf	(?_delay+1)
   927  06F2  0878               	movf	0+(??_rotate+0)+0,w
   928  06F3  00F0               	movwf	(?_delay)
   929                           
   930  06F4  120A  118A  2682   	fcall	_delay
              120A  118A         
   931                           	line	181
   932                           	
   933  06F9                     l2629:	
   934                           ;PR7.c: 181: RC3=0;
   935  06F9  1283               	bcf	status, 5	;RP0=0, select bank0
   936  06FA  1303               	bcf	status, 6	;RP1=0, select bank0
   937  06FB  1187               	bcf	(59/8),(59)&7
   938                           	line	182
   939                           	
   940  06FC                     l2631:	
   941                           ;PR7.c: 182: delay(i);
   942  06FC  087C               	movf	(rotate@i),w
   943  06FD  00F8               	movwf	(??_rotate+0)+0
   944  06FE  01F9               	clrf	((??_rotate+0)+0+1)
   945  06FF  01FA               	clrf	((??_rotate+0)+0+2)
   946  0700  01FB               	clrf	((??_rotate+0)+0+3)
   947  0701  087B               	movf	3+(??_rotate+0)+0,w
   948  0702  00F3               	movwf	(?_delay+3)
   949  0703  087A               	movf	2+(??_rotate+0)+0,w
   950  0704  00F2               	movwf	(?_delay+2)
   951  0705  0879               	movf	1+(??_rotate+0)+0,w
   952  0706  00F1               	movwf	(?_delay+1)
   953  0707  0878               	movf	0+(??_rotate+0)+0,w
   954  0708  00F0               	movwf	(?_delay)
   955                           
   956  0709  120A  118A  2682   	fcall	_delay
              120A  118A         
   957                           	line	183
   958                           ;PR7.c: 183: }
   959  070E  2F41               	goto	l666
   960                           	line	184
   961                           	
   962  070F                     l664:	
   963                           	line	186
   964                           	
   965  070F                     l2633:	
   966                           ;PR7.c: 184: else
   967                           ;PR7.c: 185: {
   968                           ;PR7.c: 186: i = 255-ADRESH;
   969  070F  1283               	bcf	status, 5	;RP0=0, select bank0
   970  0710  1303               	bcf	status, 6	;RP1=0, select bank0
   971  0711  031E               	decf	(30),w	;volatile
   972  0712  3AFF               	xorlw	0ffh
   973  0713  3EFF               	addlw	0FFh
   974  0714  00F8               	movwf	(??_rotate+0)+0
   975  0715  0878               	movf	(??_rotate+0)+0,w
   976  0716  00FC               	movwf	(rotate@i)
   977                           	line	187
   978                           	
   979  0717                     l2635:	
   980                           ;PR7.c: 187: RC3=1;
   981  0717  1587               	bsf	(59/8),(59)&7
   982                           	line	188
   983                           	
   984  0718                     l2637:	
   985                           ;PR7.c: 188: delay(i);
   986  0718  087C               	movf	(rotate@i),w
   987  0719  00F8               	movwf	(??_rotate+0)+0
   988  071A  01F9               	clrf	((??_rotate+0)+0+1)
   989  071B  01FA               	clrf	((??_rotate+0)+0+2)
   990  071C  01FB               	clrf	((??_rotate+0)+0+3)
   991  071D  087B               	movf	3+(??_rotate+0)+0,w
   992  071E  00F3               	movwf	(?_delay+3)
   993  071F  087A               	movf	2+(??_rotate+0)+0,w
   994  0720  00F2               	movwf	(?_delay+2)
   995  0721  0879               	movf	1+(??_rotate+0)+0,w
   996  0722  00F1               	movwf	(?_delay+1)
   997  0723  0878               	movf	0+(??_rotate+0)+0,w
   998  0724  00F0               	movwf	(?_delay)
   999                           
  1000  0725  120A  118A  2682   	fcall	_delay
              120A  118A         
  1001                           	line	189
  1002                           	
  1003  072A                     l2639:	
  1004                           ;PR7.c: 189: RC3=0;
  1005  072A  1283               	bcf	status, 5	;RP0=0, select bank0
  1006  072B  1303               	bcf	status, 6	;RP1=0, select bank0
  1007  072C  1187               	bcf	(59/8),(59)&7
  1008                           	line	190
  1009                           	
  1010  072D                     l2641:	
  1011                           ;PR7.c: 190: delay(i);
  1012  072D  087C               	movf	(rotate@i),w
  1013  072E  00F8               	movwf	(??_rotate+0)+0
  1014  072F  01F9               	clrf	((??_rotate+0)+0+1)
  1015  0730  01FA               	clrf	((??_rotate+0)+0+2)
  1016  0731  01FB               	clrf	((??_rotate+0)+0+3)
  1017  0732  087B               	movf	3+(??_rotate+0)+0,w
  1018  0733  00F3               	movwf	(?_delay+3)
  1019  0734  087A               	movf	2+(??_rotate+0)+0,w
  1020  0735  00F2               	movwf	(?_delay+2)
  1021  0736  0879               	movf	1+(??_rotate+0)+0,w
  1022  0737  00F1               	movwf	(?_delay+1)
  1023  0738  0878               	movf	0+(??_rotate+0)+0,w
  1024  0739  00F0               	movwf	(?_delay)
  1025                           
  1026  073A  120A  118A  2682   	fcall	_delay
              120A  118A         
  1027  073F  2F41               	goto	l666
  1028                           	line	191
  1029                           	
  1030  0740                     l665:	
  1031  0740  2F41               	goto	l666
  1032                           	
  1033  0741                     l663:	
  1034                           	line	192
  1035                           	
  1036  0741                     l666:	
  1037  0741  0008               	return
  1038                           	opt stack 0
  1039                           GLOBAL	__end_of_rotate
  1040  0742                     	__end_of_rotate:
  1041 ;; =============== function _rotate ends ============
  1042                           
  1043                           	signat	_rotate,88
  1044                           	global	_delay
  1045                           psect	text120,local,class=CODE,delta=2
  1046                           global __ptext120
  1047  0682                     __ptext120:
  1048                           
  1049 ;; *************** function _delay *****************
  1050 ;; Defined at:
  1051 ;;		line 143 in file "../../Source File/PR7.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  data            4    0[COMMON] unsigned long 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;		None               void
  1058 ;; Registers used:
  1059 ;;		wreg
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         4       0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0
  1067 ;;      Temps:          4       0       0       0       0
  1068 ;;      Totals:         8       0       0       0       0
  1069 ;;Total ram usage:        8 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; This function calls:
  1072 ;;		Nothing
  1073 ;; This function is called by:
  1074 ;;		_main
  1075 ;;		_rotate
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           psect	text120
  1079                           	file	"../../Source File/PR7.c"
  1080                           	line	143
  1081                           	global	__size_of_delay
  1082  0030                     	__size_of_delay	equ	__end_of_delay-_delay
  1083                           	
  1084  0682                     _delay:	
  1085                           	opt	stack 6
  1086                           ; Regs used in _delay: [wreg]
  1087                           	line	144
  1088                           	
  1089  0682                     l2609:	
  1090                           ;PR7.c: 144: for( ;data>0;data-=1);
  1091  0682  0873               	movf	(delay@data+3),w
  1092  0683  0472               	iorwf	(delay@data+2),w
  1093  0684  0471               	iorwf	(delay@data+1),w
  1094  0685  0470               	iorwf	(delay@data),w
  1095  0686  1D03               	skipz
  1096  0687  2E89               	goto	u2411
  1097  0688  2E8A               	goto	u2410
  1098  0689                     u2411:
  1099  0689  2E8C               	goto	l2613
  1100  068A                     u2410:
  1101  068A  2EB1               	goto	l656
  1102                           	
  1103  068B                     l2611:	
  1104  068B  2EB1               	goto	l656
  1105                           	
  1106  068C                     l654:	
  1107                           	
  1108  068C                     l2613:	
  1109  068C  3001               	movlw	01h
  1110  068D  00F4               	movwf	((??_delay+0)+0)
  1111  068E  3000               	movlw	0
  1112  068F  00F5               	movwf	((??_delay+0)+0+1)
  1113  0690  3000               	movlw	0
  1114  0691  00F6               	movwf	((??_delay+0)+0+2)
  1115  0692  3000               	movlw	0
  1116  0693  00F7               	movwf	((??_delay+0)+0+3)
  1117  0694  0874               	movf	0+(??_delay+0)+0,w
  1118  0695  02F0               	subwf	(delay@data),f
  1119  0696  0875               	movf	1+(??_delay+0)+0,w
  1120  0697  1C03               	skipc
  1121  0698  0F75               	incfsz	1+(??_delay+0)+0,w
  1122  0699  2E9B               	goto	u2425
  1123  069A  2E9C               	goto	u2426
  1124  069B                     u2425:
  1125  069B  02F1               	subwf	(delay@data+1),f
  1126  069C                     u2426:
  1127  069C  0876               	movf	2+(??_delay+0)+0,w
  1128  069D  1C03               	skipc
  1129  069E  0F76               	incfsz	2+(??_delay+0)+0,w
  1130  069F  2EA1               	goto	u2427
  1131  06A0  2EA2               	goto	u2428
  1132  06A1                     u2427:
  1133  06A1  02F2               	subwf	(delay@data+2),f
  1134  06A2                     u2428:
  1135  06A2  0877               	movf	3+(??_delay+0)+0,w
  1136  06A3  1C03               	skipc
  1137  06A4  0F77               	incfsz	3+(??_delay+0)+0,w
  1138  06A5  2EA7               	goto	u2429
  1139  06A6  2EA8               	goto	u2420
  1140  06A7                     u2429:
  1141  06A7  02F3               	subwf	(delay@data+3),f
  1142  06A8                     u2420:
  1143                           
  1144  06A8  0873               	movf	(delay@data+3),w
  1145  06A9  0472               	iorwf	(delay@data+2),w
  1146  06AA  0471               	iorwf	(delay@data+1),w
  1147  06AB  0470               	iorwf	(delay@data),w
  1148  06AC  1D03               	skipz
  1149  06AD  2EAF               	goto	u2431
  1150  06AE  2EB0               	goto	u2430
  1151  06AF                     u2431:
  1152  06AF  2E8C               	goto	l2613
  1153  06B0                     u2430:
  1154  06B0  2EB1               	goto	l656
  1155                           	
  1156  06B1                     l655:	
  1157                           	line	145
  1158                           	
  1159  06B1                     l656:	
  1160  06B1  0008               	return
  1161                           	opt stack 0
  1162                           GLOBAL	__end_of_delay
  1163  06B2                     	__end_of_delay:
  1164 ;; =============== function _delay ends ============
  1165                           
  1166                           	signat	_delay,4216
  1167                           psect	text121,local,class=CODE,delta=2
  1168                           global __ptext121
  1169  0000                     __ptext121:
  1170                           	global	btemp
  1171  007E                     	btemp set 07Eh
  1172                           
  1173                           	DABS	1,126,2	;btemp
  1174                           	global	wtemp0
  1175  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Jul 21 11:04:17 2015

                  _GO 00FA                    _RD 0C60                    _WR 0C61                    _on 0021  
                 l630 0781                   l631 0786                   l623 075A                   l640 07D2  
                 l632 07BD                   l624 077B                   l641 07D4                   l633 07A2  
                 l625 0760                   l650 07FD                   l642 07E3                   l634 07A2  
                 l626 0760                   l651 07FD                   l643 07E0                   l635 07A7  
                 l627 0765                   l660 06B7                   l644 07E2                   l636 07EB  
                 l628 079C                   l661 06BC                   l645 07EB                   l637 07BE  
                 l629 0781                   l654 068C                   l662 06C3                   l638 07E4  
                 l655 06B1                   l663 0741                   l647 07FA                   l639 07D5  
                 l656 06B1                   l664 070F                   l648 07FB                   l665 0740  
                 l649 07FC                   l666 0741                   l659 06B7                   _GIE 005F  
                 _RB1 0031                   _RC0 0038                   _RB2 0032                   _RC1 0039  
                 _RC2 003A                   _RB4 0034                   _RC3 003B                   _RC4 003C  
                 _RC5 003D                   _ccw 0020                   _run 0022                  l2611 068B  
                l2613 068C                  l2621 06C3                  l2701 07CC                  l2631 06FC  
                l2623 06E0                  l2615 06B2                  l2703 07D6                  l2609 0682  
                l2641 072D                  l2625 06E4                  l2633 070F                  l2617 06BC  
                l2705 07DA                  l2635 0717                  l2627 06E7                  l2619 06C1  
                l2707 07F1                  l2651 074F                  l2643 0742                  l2637 0718  
                l2629 06F9                  l2709 07F5                  l2661 075A                  l2653 0752  
                l2645 0745                  l2639 072A                  l2663 075F                  l2671 077B  
                l2655 0756                  l2647 074B                  l2673 0780                  l2681 079C  
                l2665 0765                  l2657 0757                  l2649 074C                  l2691 07BE  
                l2683 07A1                  l2675 0786                  l2667 0772                  l2659 0758  
                l2693 07C2                  l2685 07A7                  l2677 0793                  l2669 0778  
                l2695 07C3                  l2687 07B4                  l2679 0799                  l2697 07C7  
                l2689 07BA                  l2699 07C8                  u2410 068A                  u2411 0689  
                u2420 06A8                  u2500 0785                  u2501 0784                  u2430 06B0  
                u2510 07A0                  u2431 06AF                  u2511 079F                  u2440 06BB  
                u2520 07A6                  u2425 069B                  u2441 06BA                  u2521 07A5  
                u2426 069C                  u2450 06C1                  u2530 07C2                  u2427 06A1  
                u2451 06C0                  u2428 06A2                  u2460 06E0                  u2540 07C7  
                u2429 06A7                  u2461 06DF                  u2550 07CC                  u2470 075E  
                u2471 075D                  u2560 07DA                  u2480 0764                  u2465 06DC  
                u2481 0763                  u2570 07F1                  u2490 077F                  u2571 07F0  
                u2491 077E                  u2580 07F5                  u2581 07F4                  u2590 07F9  
                u2591 07F8                  _WREN 0C62                  _main 0742                  btemp 007E  
                start 0000                 ?_main 0070                 _EEADR 010D                 _CARRY 0018  
               _PORTC 0007                 _TRISA 0085                 _TRISB 0086                 _TRISC 0087  
               _delay 0682                 status 0003                 wtemp0 007E          __end_of_main 0800  
              ??_main 007D                ?_delay 0070                _ADCON0 001F                _ADCON1 009F  
              _ADRESH 001E                _EEDATA 010C                _EECON1 018C                _EECON2 018D  
              _rotate 06B2        __pcstackCOMMON 0070         __end_of_delay 06B2               ??_delay 0074  
          __pbssBANK0 0020            __pmaintext 0742               ?_rotate 0070       __size_of_rotate 0090  
end_of_initialization 067E               rotate@i 007C        __end_of_rotate 0742   start_initialization 067B  
            ??_rotate 0078         __pcstackBANK0 0023             __ptext120 0682             __ptext121 0000  
           __ptext118 0000             __ptext119 06B2        __size_of_delay 0030             delay@data 0070  
       __size_of_main 00BE              main@turn 0023  
